<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="True">
                <Setter Property="Foreground" Value="#FFF9F9FB" />
            </DataTrigger>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="False">
                <Setter Property="Foreground" Value="#FF040205" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Style" TargetType="StackPanel">
        <Style.Triggers>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsSelected}" Value="True">
                <Setter Property="Background" Value="#FF262427" />
            </DataTrigger>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="False">
                <Setter Property="Background" Value="#FFF9F9FB" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TextBlockToggleButtonStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="True">
                <Setter Property="Foreground" Value="#FFF9F9FB"/>
                <Setter Property="Text" Value="Светлая тема"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="False">
                <Setter Property="Foreground" Value="#FF040205"/>
                <Setter Property="Text" Value="Тёмная тема"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="GridLayoutMenuStyle" TargetType="Grid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="True">
                <Setter Property="Background" Value="#FF040205"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="False">
                <Setter Property="Background" Value="#FFF9F9FB"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CanvasStyle" TargetType="Canvas">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="True">
                <Setter Property="Background" Value="#FF262427"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="False">
                <Setter Property="Background" Value="#FFF9F9FB"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LineStyle" TargetType="Line">
        <Setter Property="Stroke" Value="#FF262427"/>
    </Style>
    <Style x:Key="EllipseStyle" TargetType="Ellipse">
        <Style.Triggers>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="True">
                <Setter Property="Fill" Value="#FFF9F9FB" />
            </DataTrigger>

            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="False">
                <Setter Property="Fill" Value="#FF040205" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatAccentButton}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#FF262427"/>
        <Setter Property="Background" Value="#FFF9F9FB"/>
        <Setter Property="Width" Value="175"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="True">
                <Setter Property="Background" Value="#FF040205" />
                <Setter Property="Foreground" Value="#FFF9F9FB" />
            </DataTrigger>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="False">
                <Setter Property="Background" Value="#FFF9F9FB" />
                <Setter Property="Foreground" Value="#FF040205" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DividingLineStyle" TargetType="Canvas">
        <Style.Triggers>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="True">
                <Setter Property="Background" Value="#FFF9F9FB" />
            </DataTrigger>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="False">
                <Setter Property="Background" Value="#FF040205" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TextBoxStyleForBlock" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{Binding ElementName=listFontFamily, Path=SelectedItem}" />
        <Setter Property="FontSize" Value="{Binding ElementName=listFontSize, Path=SelectedItem}"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="AcceptsReturn" Value="True" />
    </Style>
    <Style x:Key="TextBoxStyleForComment" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{Binding ElementName=listFontFamily, Path=SelectedItem}" />
        <Setter Property="FontSize" Value="{Binding ElementName=listFontSize, Path=SelectedItem.Content}"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="True">
                <Setter Property="Foreground" Value="#FFF9F9FB" />
            </DataTrigger>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="False">
                <Setter Property="Foreground" Value="#FF040205" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TextBlockStyleForBlock" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{Binding ElementName=listFontFamily, Path=SelectedItem}" />
        <Setter Property="FontSize" Value="{Binding ElementName=listFontSize, Path=SelectedItem.Content}"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=textAlignLeft, Path=IsSelected}" Value="True">
                <Setter Property="TextAlignment" Value="Left" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=textAlignCenter, Path=IsSelected}" Value="True">
                <Setter Property="TextAlignment" Value="Center" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=textAlignRight, Path=IsSelected}" Value="True">
                <Setter Property="TextAlignment" Value="Right" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=textAlignJustify, Path=IsSelected}" Value="True">
                <Setter Property="TextAlignment" Value="Justify" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=textBold, Path=IsSelected}" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=textItalic, Path=IsSelected}" Value="True">
                <Setter Property="FontStyle" Value="Italic" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=textItalic, Path=IsSelected}" Value="True">
                <Setter Property="FontStyle" Value="Italic" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=textUnderline, Path=IsSelected}" Value="True">
                <Setter Property="TextDecorations" Value="Underline" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonStyleMenu" TargetType="Button">
        <Setter Property="Width" Value="175"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="12"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="True">
                <Setter Property="Foreground" Value="#FFF9F9FB" />
            </DataTrigger>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="False">
                <Setter Property="Foreground" Value="#FF040205" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource MaterialDesignSwitchDarkToggleButton}">
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="50"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="True">
                <Setter Property="Foreground" Value="#FFF9F9FB" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonOpenCloseMenuStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionMiniAccentButton}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="True">
                <Setter Property="Foreground" Value="#FFF9F9FB" />
            </DataTrigger>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="False">
                <Setter Property="Foreground" Value="#FF040205" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TextBoxStyleForCase" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{Binding ElementName=listFontFamily, Path=SelectedItem}" />
        <Setter Property="FontSize" Value="{Binding ElementName=listFontSize, Path=SelectedItem.Content}"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="True">
                <Setter Property="Foreground" Value="#FFF9F9FB" />
            </DataTrigger>
            <DataTrigger Binding="{Binding  ElementName=toggleButtonStyleTheme, Path=IsChecked}" Value="False">
                <Setter Property="Foreground" Value="#FF040205" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <ResourceDictionary.MergedDictionaries>
        <!-- theme from MaterialDesignInXAML -->
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml"/>

        <!-- additional resources -->
        <ResourceDictionary>
            <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="{StaticResource Primary100}"/>
            <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="{StaticResource Primary100Foreground}"/>
            <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="Red"/>
            <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}"/>
            <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="{StaticResource Primary600}"/>
            <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="{StaticResource Primary600Foreground}"/>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
</ResourceDictionary> 